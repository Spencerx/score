<?xml version="1.0" encoding="UTF-8"?>
<component type="desktop-application">
  <id>io.ossia.score</id>
  <metadata_license>CC-BY-SA-4.0</metadata_license>
  <project_license>GPL-3.0</project_license>
  <name>ossia score</name>
  <summary>Sequencer for media artists</summary>
  <developer id="io.github.ossia">
    <name>ossia.io</name>
  </developer>
  <branding>
    <color type="primary" scheme_preference="light">#e9f0f1</color>
    <color type="primary" scheme_preference="dark">#1f1f20</color>
  </branding>
  <description>
    <p>ossia score is a sequencer for audio-visual artists, designed to enable the creation of interactive shows, museum installations, intermedia digital artworks, interactive music and more in an intuitive user interface.</p>
    
    <ul>
      <li>Sequence OSC, MIDI, DMX, sound, video and more, between multiple software and hardware. </li>
      <li>Script and live-code with JavaScript, ISF Shaders, Faust, PureData or C++.</li>
      <li>Leverage IoT protocols such as CoAP or MQTT for industrial-grade automation.</li>
      <li>Interact with joysticks, Wiimotes, Leapmotions, Web APIs and BLE sensors.</li>
      <li>Integrate programs from a wealth of creative programming languages such as Structure Synth, Context-Free Art and Bytebeat.</li>
      <li>Load any kind of audio or video format and process visuals through Spout, Syphon, NDI, Shmdata or Sh4lt.</li>
      <li>Use VST3, LV2 audio plug-ins and more.</li>
    </ul>
  </description>
  <launchable type="desktop-id">io.ossia.score.desktop</launchable>
  <content_rating type="oars-1.1" />
  <url type="bugtracker">https://github.com/ossia/score/issues</url>
  <url type="contact">https://discord.gg/8Hzm4UduaS</url>
  <url type="contribute">https://ossia.io/project.html</url>
  <url type="donation">https://opencollective.com/ossia</url>
  <url type="help">https://ossia.io/docs.html</url>
  <url type="homepage">https://ossia.io</url>
  <url type="vcs-browser">https://github.com/ossia/score</url>
  <screenshots>
    <screenshot type="default" xml:lang="en">
      <image>https://github.com/ossia/score/raw/master/docs/score.png?raw=true</image>
      <caption>Sequence all kinds of media in ossia score</caption>
    </screenshot>
  </screenshots>
  <releases>
    <release version="3.4.2" date="2025-01-16">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.5.0</url>
      <description>
        <p>ossia score 3.5.0 is a large upgrade which paves the way towards future improvements.</p>
        <p>Major platform changes</p>
        <ul>
          <li>Official releases now assume an AVX2 CPU and 64-bit on x86-64. This does not apply to releases from various packages managers such as MSYS2, NixPkgs, FreeBSD ports.</li>
          <li>Updated libraries: Qt to 6.9, FFMPEG to 7.1.1, etc.</li>
          <li>On macOS, at least macOS 12.0 is now required as it is the minimum for recent Qt versions.</li>
          <li>On macOS, score will abort if DYLD_LIBRARY_PATH is set as this usually cause spurious crashes when using the app due to loading Homebrew libs such as libpng over Apple ones.</li>
          <li>The AArch64 Linux build (for Raspberry Pi, Asahi Linux, etc.) is now based on AppImage too and uses the same build scripts than x86_64 Linux. </li>
          <li>Build support for newer compilers, e.g. Clang 20, 21 as well as CMake 4.0.</li>
          <li>The entirety of MIDI processing inside score is now based on MIDI 2 UMP instead of MIDI 1 messages, which for now has no other user-facing effect than improving performance when using many MIDI objects, as UMP is more efficient.</li>
        </ul>

        <p>New features</p>
        <ul>
          <li>Allow to open code in external editors. Thanks @samamou! For this feature to work an editor must be set in the settings.</li>
          <li>UI: indicate when an address is not found in the tree to help with error understanding</li>
          <li>UI: make address search recursive and fix some unhandled cases</li>
          
          <li>Model display: implement a basic fulldome projection mode suitable for point clouds and detailed geometry</li>
          <li>ISF: support shader controls with inverted min / max</li>
          <li>Graphics: enable NVidia and AMD card by default if available over integrated graphics</li>
          <li>Graphics: enable Vulkan 1.1+ if available</li>
          <li>DMX: work-in-progress UI for defining LED fixtures (strips, panes)</li>
          <li>DMX: many interface improvements and features when creating a device. Allow to set universe length for special cases (DMX LEDs with 510 channels per universe). DMX addresses are more easily editable. Allow to add directly simple dimmers and RGB pars.</li>
          <li>HTTP device: add support for POST requests</li>
          <li>HTTP device: add onRead and onReadString to allow to handle streaming input</li>
          <li>Audio: add an env var to force a global audio decoding method</li>
          <li>Core: support building in C++23 and C++26 mode.</li>
          <li>MIDI: add a MIDI to array plug-in</li>
          <li>Graphics: allow running on the vkkhrdisplay backend, to support Vulkan rendering without any graphics server.</li>
          <li>Graphics: allow setting single, double or triple buffering in the settings.</li>
          <li>Graphics: texture inlets can now specify a custom rendering resolution and filtering mode (ne.g. earest or linear).</li>
          <li>Graphics: add support for the Qt RHI D3D12 backend</li>
          
          <li>UI: add new widget useful for spatialization trajectories. Thanks @D3mh4!</li>
          <li>JS: add functions useful for creating and looking up devices from the console.</li>
          <li>JS: texture inlets will now receive mouse, touch and key events to enable user interaction with e.g. MouseArea.</li>
          <li>JS: add an UI mode to run a score with a custom Qt Quick user interface, through `--ui` command line flag.</li>
          <li>Audio: add ALSA support through Miniaudio to handle some cases where MMAP (Alsa Raw) and PortAudio both cause issues, e.g. for the pulse ALSA plugin</li>
          <li>Graphics: add a SCORE_DISABLE_SHADER_PREVIEW environment variable to disable shader preview widgets in the main score UI, as depending on the pipelines they can cause unwanted graphics lags in live performances.</li>
        </ul>

        <p>Changes and bugfixes</p>
        <ul>
          <li>Fix conversion of int addresses into float nodes ; fix midi mapping of CCs into e.g. ISF shaders</li>
          <li>OSC: fix invalid widget for OSC over serial port</li>
          <li>Build fixes for various LV2 and Suil corner cases</li>
          <li>Graphics: fix window not coming back up for rendering once closed</li>
          <li>Vel to Note: fix that notes were killed instantly when no quantification</li>
          <li>ISF: set default range to 0-1 to not break mappings if the shader does not provide a range</li>
          <li>Graphics: many fixes to Y being inverted in some cases with back-ends other than OpenGL.</li>
          <li>Graphics: more leniency towards invalid shaders, try to avoid crashes in much more cases.</li>
          <li>RMS: fix that computation was broken when in stereo</li>
          <li>Audio: better handling of denormals across the board, allow to specifiy that some nodes actually needs denormals</li>
          <li>UI: fix that inspector comboboxes would not update when creating a new device</li>
          <li>Graphics: many compatibility fixes for Spout and Syphon support</li>
          <li>UI: fix splash screen scaling on hidpi screens</li>
          <li>Micromap: fix that time-related variables were broken in non-array cases</li>
          <li>DMX: remove libartnet dependency which fixes a lot of ArtNet spurious errors</li>
          <li>audio: fix that dummy plug-in was always set back to 1024 buffer size</li>
          <li>GPIOs: add a timer to regularly poll inputs</li>
          <li>Graphics:add a way for render nodes to have a parent renderer, to allow synchronized multi-viewport</li>
          <li>MIDI control surfaces: fix support for hardware BCF2000 protocol</li>
          <li>Local device: fix changing port</li>
          <li>engine: fix play / pause remote control in no-gui mode</li>
          <li>coreaudio: fix device names in selector and no device not coming back</li>
          <li>macOS: reenable JIT on AArch64</li>
          <li>VST: look for plugins into $HOME/.vst</li>
          <li>LV2: look for plugins into $HOME/.lv2</li>
          <li>UX: show address widgets if an address is set</li>
          <li>UX: fix copy-paste position of multiple nodes in nodal view</li>
          <li>Graphics: create less surfaces when scrolling ISF presets which makes interaction much smoother.</li>
          <li>Processes: fix that kurtosis analysis process had disappeared.</li>
          <li>Numerous smaller code improvements, many fixes to the graphics pipeline.</li>
          <li>Camera: fix that custom camera type was not being saved</li>
          <li>Audio: fix using ossia with soundcards with more than 128 channels on Mac.</li>
          <li>Library: improve startup times by deferring parsing of many file formats to when they get selected on the library.</li>
          <li>JIT: fix target triple especially on Apple</li>

        </ul>
      </description>
    </release>
    <release version="3.4.1" date="2025-01-16">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.4.1</url>
      <description>
        <p>ossia score 3.4.0 is a feature-packed release for the start of 2025.</p>
        <p>New features</p>
        <ul>
          <li>Bitfocus: handle regexes better in fields, fix that some configuration fields could not be typed into.</li>
          <li>CI: fix missing env. var when building tarballs.</li>
          <li>CI: fix build on Qt 6.2</li>
          <li>Scenario: disable min / max bounds when connecting to a trigger</li>
          <li>Local tree: add port min/max metadata for parameters</li>
          <li>Local tree: allow copy-paste of local tree address of inlets and objects</li>
          <li>Mapper device: safety fix, implement #1672 (Device.read and Device.write)</li>
          <li>BSD: look explicitly for linux/gpio.h as it seems that some BSDs have linux/types.h and not linux/gpio.h</li>
          <li>Tooling: developer.sh: fix that it would clone addons with sudo leading to end-user confusion</li>
          <li>Gfx: Fix cpu filter ports with multiple inputs</li>
          <li>Linux: disable custom qt.conf in distro builds</li>
          <li>Poles: fix count which had an improptu off-by-one error</li>
          <li>macOS: more Coreaudio fixes, for some devices such as Blackhole</li>
        </ul>
      </description>
    </release>
    <release version="3.4.0" date="2024-12-31">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.4.0</url>
      <description>
        <p>ossia score 3.4.0 is a feature-packed release for the start of 2025.</p>
        <p>New features</p>
        <ul>
          <li>Introduce initial alpha support for loading AI models through onnxruntime. Right now supported models are BlazePose, YOLOv7 (blob detection), YOLOv8 (pose), ResNet. More to come, please mention any model you'd be interested in on our Discord! Feat. a cute new icon by @aklevy!</li>
          <li>Introduce initial support for using Bitfocus Companion integrations and modules directly from ossia score. This requires installing an additional package from the package manager.</li>
          <li>Introduce initial support for MIDI control surfaces using the MCU protocol. Selecting a process will now make its parameters available over the control surface UI.</li>
          <li>Introduce Array Combiner, Array Tool, Array Flattener, and Array Recombiner processes to efficiently process arrays in various ways.</li>
          <li>Add a new 2D Point View visualizer to visualize arrays of 2D positions.</li>
          <li>Add a new Envelope Follower based on kferg.dev algorithm.</li>
          <li>Add an initial implementation for 2D and 3D DBAP spatialization algorithm. Note that the implementation just generates the coefficients, and thus can be applied to any kind of spatial content, not just audio data.</li>
          <li>Arraygen / Arraymap now provide an `n` variable to get access to the current number of elements.</li>
          <li>Improve on-line help integration. Hitting F1 on any process will now open a browser with the help page of said object.</li>
          <li>Integrate on-line help with Faust, VST and LV2 help page if available.</li>
          <li>LED View now supports displaying input array as a lightness array.</li>
          <li>Lightness Computer now supports RGBW output to facilitate use with this kind of LED strip.</li>
          <li>LV2: add a locally-built Suil for showing LV2 UIs as the latest release does not yet support Qt 6.</li>
          <li>macOS: more video format support.</li>
          <li>macOS: port away from PortAudio to MiniAudio for audio backend. This finally allows to select a different input and output device and overall looks much more stable all while being much easier to integrate.</li>
          <li>Patternist: add support for Accent and Slide features to enable sick acid bassline patterns.</li>
          <li>Patternist: add support for legato notes.</li>
          <li>Patternist: add TB-3 (303-like) patterns to the pattern library (jcelerier/drum-patterns on GitHub).</li>
          <li>Patternist: add patterns from "260 Drum Machine Patterns" (René-Pierre Bardet) to the pattern library (thanks @danielmroczek.</li>
          <li>Soundfile: allow to choose three quality levels for the resampling mode (e.g. pitch shift instead of time stretch). Previous and default mode is the HQ one, based on high-quality sinc interpolation from libsamplerate.</li>
          <li>Threedim addon moved into official score repo to track changes more easily.</li>
        </ul>
        <p>Platform and CI changes</p>
        <ul>
          <li>Compatibility with Boost 1.87.</li>
          <li>Flatpak: add an AArch64 build in CI.</li>
          <li>Flatpak: update to the latest toolchain.</li>
          <li>Initial successful builds of libossia targetting ESP32, more to come :-)</li>
          <li>Many updates to dependencies</li>
          <li>Reduce duplication in Github Actions CI tasks.</li>
          <li>Replace Azure entirely with Github Actions.</li>
          <li>RPi build: improve the startup scripts to cleanup unwanted dependencies if running on more recent AArch64 operating systems, such as Arch Linux or Asahi Linux.</li>
          <li>Ubuntu Lunar (23.10) was removed from CI due end-of-life.</li>
          <li>Ubuntu Oracular (24.10) was added to CI.</li>
        </ul>
        <p>Bugfixes and improvements</p>
        <ul>
          <li>Audio Recorder: support relative paths like elsewhere.</li>
          <li>Automation: big rework of the pen tool to make sure we never end up in invalid states.</li>
          <li>Automation: fix a rare crash when editing a curve point's X position.</li>
          <li>BSD: implement VST3 support.</li>
          <li>Calibrator: fix crash on remove on macOS. Thanks @led78 for finding and reproducing it!</li>
          <li>CSV Reader: multiple bugfixes, improve timestamping.</li>
          <li>Dev: allow to bypass some harmless ASAN warnings through SCORE_SANITIZE_SKIP_CHECKS=1 env var.</li>
          <li>Dev: fix missing include (thanks @aalex!).</li>
          <li>Fix some save format cable-related issues.</li>
          <li>Geometry Filter: allow to chain multiple identical filters (a small feature in appearance, which requires a full-blown GLSL parser in practice...).</li>
          <li>Geometry Filter: support livecoding better.</li>
          <li>Gfx: work on geometry output from nodes in the GPU node graph.</li>
          <li>GPS: fix a memory safety issue.</li>
          <li>JIT: re-add support on AArch64.</li>
          <li>JS: implement a deviceToOSCQuery function to export the OSCQuery JSON of a given device.</li>
          <li>JS: implement an enumerateDevices API to track added and removed devices like in the Device dialog.</li>
          <li>Kinect: fix build, initial try for a registered point-cloud output.</li>
          <li>MIDI: fix that devices would sometimes enumerate too early on macOS leading to them not being visible in the UI.</li>
          <li>MIDI: fix Computer Keyboard support on macOS. Note that this requires Accessibility permissions.</li>
          <li>MinGW: reenable addons on CI.</li>
          <li>MSVC: reenable addons on CI.</li>
          <li>OSC: add support for always sending bundles for devices that only understand bundles.</li>
          <li>OSC: disable broadcast being locked to 255.255.255.255.</li>
          <li>OSC: fix that OSC devices were not recreated leading to OSC not working after editing the device.</li>
          <li>OSCQuery: improve compatibility with weird embedded webservers.</li>
          <li>Package manager: support packages with multiple files to download.</li>
          <li>Patternist: fix crash when changing current pattern.</li>
          <li>Serial: work on allowing non-standard baud rates, if the system supports that.</li>
          <li>Signal display: fix scaling issues.</li>
          <li>UI: make a preset appear under the mouse when dropped.</li>
          <li>UI: performance optimizations for process and filesystem views.</li>
          <li>UI: improve behaviour of nodal view especially when rescaling and resizing things.</li>
          <li>UI: improve behaviour of copy-paste in nodal view.</li>
          <li>Video: do not hide cursor on embedded video windows.</li>
          <li>Video: multiple fixes to color space shaders introduced in 3.3.2.</li>
          <li>VNC: fill the requested screen resolution instead of a 1024x768 default square.</li>
          <li>VST3: fix crash when closing and reopening JUCE plug-ins. Fixes #1620.</li>
          <li>Many performance optimisations for the various math expression objects.</li>
          <li>As always a slew of smaller bugfixes and improvements !</li>
        </ul>
      </description>
    </release>
    <release version="3.3.2" date="2024-11-17">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.3.2</url>
      <description>
        <p>ossia score 3.3.2 is a minor hotfix release.</p>
        <p>New features</p>
        <ul>
          <li>Support for automatic detection of BT.601, BT.709 and Rec2020 colorspaces in videos. Rec2020 is currently downscaled to SDR until we support a proper HDR video pipeline.</li>
          <li>Signal Display will now display constant values as middle-centered dots</li>
          <li>Devices: raw evdev input access on Linux to enable reading any kind of global keyboard / tablet / mouse / ACPI event</li>
        </ul>
        <p>Bugfixes</p>
        <ul>
          <li>Audio: fix that audio analysis nodes would crash if using a non-power-of-two sample rate.</li>
          <li>Audio: improve nomenclature for audio channel extractor.</li>
          <li>Merger: fix missing combobox items.</li>
          <li>Geometry filter: fix default filter which wasn't valid json</li>
          <li>Geometry filter: add a validation step</li>
          <li>Shmdata / Sh4lt: fix support of YUY2 video</li>
          <li>LV2: prevent plug-ins with atom ports to crash.</li>
          <li>MIDI: fix support for computer keyboard on non-X11 platforms.</li>
        </ul>
      </description>
    </release>
    <release version="3.3.1" date="2024-11-15">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.3.1</url>
      <description>
        <p>ossia score 3.3.1 is a minor hotfix release.</p>
        <p>New features</p>
        <ul>
          <li>LED View process to display [r,g,b,r,g,b,...] triplets</li>
          <li>Signal Display will now display multi-dimensional arrays in addition of single values</li>
        </ul>
        <p>Bugfixes</p>
        <ul>
          <li>Build: fix warnings coming from 3rdparty libraries</li>
          <li>CI: multiple fixes</li>
          <li>UI: do not center widgets in vertical layouts</li>
          <li>UI: fix precision issue with xy / xyz spinboxes and large ranges</li>
          <li>Signal Display: fix that it was stuck</li>
          <li>Core: be more lenient with processes that have dynamic ports</li>
          <li>Core: fix that a QThread was deleted after QCoreApplication leading to a macOS crash</li>
        </ul>
      </description>
    </release>
    <release version="3.3.0" date="2024-11-12">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.3.0</url>
      <description>
        <p>ossia score 3.3.0 is a major release featuring a host of new capabilities.</p>
        <p>New features</p>
        <ul>
          <li>Audio: Add an audio channel selector object</li>
          <li>Audio: mono merging mode in Merger object</li>
          <li>Automation: Make prettyName more descriptive</li>
          <li>Avnd: initial support for objects defined as C++20 modules</li>
          <li>Avnd: support for automatic reflection of enumeration names through magic_enum, removing the need for some macros</li>
          <li>Avnd: support for CV-like data processing object with a very simple API</li>
          <li>Avnd: support for loading data files in GPU nodes</li>
          <li>Avnd: support making objects with dynamic port counts more easily</li>
          <li>CI: Migrated continuous builds to GH actions</li>
          <li>Core: Use snmalloc as default allocator</li>
          <li>Data processing: HDF5 explorer processses, which allow to expose HDF5 data as either a 1D dimension or a texture.</li>
          <li>Data processing: initial work towards importing of CSV and HDF5 files as curves by drag-and-drop.</li>
          <li>Devices: initial work in allowing devices to specify the resources they are using such as ports, etc. in a more structured way.</li>
          <li>Devices: Move the Device QML object implementation from score to libossia ; add Device.read/write to HTTP device</li>
          <li>Devices: support for direct NeoPixel LED control over SPI.</li>
          <li>Devices: support for the Sh4lt protocol which supersedes Shmdata. Thanks @nbouillot!</li>
          <li>Graphics: Add support for GPU decoding of RGB24 and BGR24 textures, useful for Qt Animation qtrle files</li>
          <li>Graphics: Efficient geometry filtering pipeline. Introduction of a Geometry Filter object which is able to inject transformations in the vertex shader stage and support for geometry processing relationships in the graphics thread.</li>
          <li>Graphics: Sprite Reader object for all your retro-gaming needs</li>
          <li>Graphics: Support for loading point clouds</li>
          <li>JS: Add utility functions to convert between types</li>
          <li>Mappings: Add a ArrayGen object to generate arrays easily</li>
          <li>Mappings: add Combine and Spread objects to enable simpler processing and recombination of values into arrays</li>
          <li>Mappings: add initial gesture detection support through the Puara Gestures library</li>
          <li>Mappings: Mapping Tool object with a lot of feature for mapping data such as deadzone detection, re-scaling, etc.</li>
          <li>Math: Fix live editing of expression in arraygen / arraymap</li>
          <li>MIDI: initial support for computer keyboard input</li>
          <li>MIDI: Virtual ports will now be scanned</li>
          <li>OSC: add support for the SpatGRIS OSC API directly through a new device</li>
          <li>OSC: allow to expose a local OSC device as a TCP server</li>
          <li>OSC: allow to expose a local OSC device over an OSCQuery port</li>
          <li>OSCQuery: handle buggy HTTP implementations that do not properly close connection</li>
          <li>OSCQuery: implement dense mode which packs values according to an OSCQuery spec, especially useful for resource-constrained devices</li>
          <li>Pipewire Respect PIPEWIRE_LATENCY environment variable</li>
          <li>Platforms: add CI script based on native packages for Debian Trixie</li>
          <li>Platforms: prevent the Intel version to run on AppleSilicon Macs as it is thoroughly incompatible</li>
          <li>Platforms: support for building in C++23 mode</li>
          <li>Platforms: support for macOS 15 and Xcode 16, clang-18, clang-19, Fedora 41</li>
          <li>PureData / libpd: revert to a version with working audio</li>
          <li>UI: Add icon for upcoming AI-based processes. Thanks @aklevy!</li>
          <li>UI: Add support for slowing down slider changes with CTRL / Command</li>
          <li>UI: implement reset-to-default-value-on-double-click on most central view UI controls</li>
          <li>UI: make the middle column resizeable in the Device dialog. Thanks @samamou!</li>
          <li>UI: tighter UI style</li>
          <li>VST3: Support for VST3 on AArch64 platforms</li>
        </ul>
        <p>Improvements and bug fixes</p>

        <ul>
          <li>Audio: Fix saving / loading of propagate attribute</li>
          <li>Audio: many fixes to quantification.</li>
          <li>Audio: Various fixes for VST and LV2</li>
          <li>Automation: Fix that changing the address would reset the scale if it was a pattern</li>
          <li>Avnd: dynamic ports improvements</li>
          <li>Avnd: support for texture sizes in CPU texture filters</li>
          <li>BLE: Fix support on Win32 and Flatpak</li>
          <li>Core: Be more lenient when reloading if a cable isn't present in a save file due to dynamic operations</li>
          <li>Core: finish porting all the plug-ins written in the previous "Fx" API to Avendish which is now the one and only officially supported API for making ossia add-ons.</li>
          <li>Curve rendering: optimizations when we have more than a thousand points.</li>
          <li>Devices: Add a more optimized device_parameter implementation when we know the type beforehand</li>
          <li>Devices: DNSSD: force every execution to execute over the same thread as Avahi is not thread-safe nor reentrant</li>
          <li>Devices: Do not try to infer the min / max if things are patterns</li>
          <li>Execution: domain and range improvements, allow value ports with ranges, fix LFO output range</li>
          <li>Graphics: Fix missing Spout I/O on Windows</li>
          <li>Graphics: fix that shmdata input do not reconnect when writer quits</li>
          <li>Graphics: improve the amount of recomputations needed for geometry updates</li>
          <li>Images: fix render shader which had broken</li>
          <li>Items: Send signals to release mouse if a graphics item is deleted while being grabbed</li>
          <li>JS: thread safety fixes and improvements</li>
          <li>MIDI: fix some note-off cases that were not handled.</li>
          <li>MIDI: Use the proper app name in MIDI APIs</li>
          <li>Platform: Improve support of QT_QPA_PLATFORM=minimal</li>
          <li>Raw I/O: improve PWM support</li>
          <li>Scenario: creating a state by double-click will now automatically make it auto-started</li>
          <li>Spline: Update and fix small bugs in tinyspline library</li>
          <li>UI: Add documentation links to most processes and devices. The process inspector and device dialog now have direct links to the relevant help pages.</li>
          <li>UI: Be more permissive with looping slot issues</li>
          <li>UI: fix connected port look in hi-dpi mode</li>
          <li>UI: fix the ugly ampersand that appeared some Qt versions ago.</li>
          <li>UI: Fix UI not resizing when a port is added to a node</li>
          <li>UI: LineEdit: improve relayout in nodes</li>
          <li>UI: make sure that controls always show up no matter what in the inspector panel</li>
          <li>UI: port UI improvements in inspector ; show more port names and always show port list.</li>
          <li>UI: respect Alt-key magnetism behaviour when dropping a state.</li>
          <li>UI: Update scene when node size changes to prevent background artefacts</li>
          <li>UI: use double-precision for storing slider data as it caused visible precision issues with large ranges</li>
          <li>VST / VST3: Disable GUI when running under wayland as plug-ins will crash</li>
          <li>VST and friends:  Use the actual processed samples as timing information instead of a computation depending on speed</li>
          <li>YSFX: cmake improvements</li>
          <li>Many, many other bugfixes and code improvements...</li>
        </ul>
      </description>
    </release>
    <release version="3.2.4" date="2024-07-08">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.2.4</url>
      <description>
        <p>ossia score 3.2.4 is a bugfix release which enables FreeBSD support.</p>
        <ul>
          <li>Various fixes for VST and LV2</li>
        </ul>
      </description>
    </release>
    <release version="3.2.3" date="2024-07-02">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.2.3</url>
      <description>
        <p>ossia score 3.2.3 is a bugfix release which enables Flatpak support.</p>
        <ul>
          <li>Update dependencies to be flatpak-compatible</li>
          <li>A bugfix to Nix support</li>
        </ul>
      </description>
    </release>
  </releases>
</component>
